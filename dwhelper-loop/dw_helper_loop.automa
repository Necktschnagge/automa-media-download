import time
from win32con import VK_CAPITAL


DELAY_IN_IDLE = 60 #
DELAY_ON_LEAVE_IDLE = 10 # needed since if a new item of download appers it takes a while until it is labled right by dwhelper
DELAY_AFTER_DOWNLOADING_ONE_ITEM = 5
WAIT_AFTER_DOWNLOAD_STARTED = 20

dw_helper_icon = Image("dw_helper_icon.png")
scroll_down = Image("scroll_down.png")
download_icon = Image("download_not_executed_icon.png")
advanced_options = Image("advanced_options.png")
open_media_locally = Image("open_media_locally.png")
delete_entry_from_list = Image("delete_entry_from_list.png")
quick_download = Image("quick_download.png")
scrolled_down_done = Image("scrolled_down_done.png")
already_downloaded_lets_play_icon = Image("already_downloaded_lets_play_icon.png",0.95)
download_icon_2 = Image("download_not_executed_icon.png",0.95)


def search_for_new_entry():
 time.sleep(2)
 click(dw_helper_icon)
 if not download_icon.exists():
  click(scroll_down)
  return False

 print("found a maybe-download icon.")
 hover(download_icon)
 time.sleep(2)
 if not advanced_options.exists():
  print("No advanced options button.")
  while(1):
   time.sleep(10)
 click(advanced_options)
 hover(dw_helper_icon)
 time.sleep(2)

 if open_media_locally.exists():
  print("already downloaded.")
  if not delete_entry_from_list.exists():
   print("file already downloaded but cannot remove item from list.")
   while(1):
    time.sleep(10)
  click(delete_entry_from_list)
  return False
 else:
  print("not yet downloaded")
  hover(dw_helper_icon)
  time.sleep(1)
  if not quick_download.exists():
   print("file not yet downloaded but cannot click quick download button.")
   while(1):
    time.sleep(10)
  print("found quick_download button and click it.")
  click(quick_download)
  return True


def stop():
 while(1):
  time.sleep(60)

def CAPSLOCK_STATE():
 import ctypes
 hllDll = ctypes.WinDLL ("User32.dll")
 VK_CAPITAL = 0x14
 return ((hllDll.GetKeyState(VK_CAPITAL)) & 0xffff) != 0

''' be sure dwhelper icon is already clicked an dthis item list is visible '''
def can_process_items(): # manually tested
 #if GetKeyState(VK_CAPITAL) == 1:
 # print("CAPS Lock is on.")
 #print("Abort script now.")
 #press(LWIN)
 #stop()
 list_downloads = find_all(download_icon_2)
 list_plays = find_all(already_downloaded_lets_play_icon)
 print("Found " + str(len(list_downloads)) + " download icons and " + str(len(list_plays)) + " play icons.")
 return (len(list_downloads) + len(list_plays) > 1) or (len(list_downloads) > 0)

''' enter with dw helper menu open and leave with menu closed'''
def delete_an_item():
 print("Start to delete an item.")
 if not already_downloaded_lets_play_icon.exists():
  print("No item to delte found.")
  stop()
 hover(already_downloaded_lets_play_icon)
 if not advanced_options.exists():
  print("No advanced options button.")
  stop()
 click(advanced_options)
 hover(dw_helper_icon)
 time.sleep(1) # ???
 if not open_media_locally.exists():
  print("Item not already downloaded.")
  print("Could not delete item.")
  click(dw_helper_icon)
  return
 if not delete_entry_from_list.exists():
  print("Item has no delete from list button.")
  print("Could not delete item.")
  click(dw_helper_icon)
  return
 click(delete_entry_from_list)
 print("Delete item finished.")

 ''' enter with dw helper menu open and leave with menu closed'''
def download_an_item():
 print("Start downloading an item.")
 #hover(Point(100,5))
 if not download_icon_2.exists():
  print("No item to download found.")
  stop()
 x = find_all(download_icon_2)
 hover(x[len(x) - 1])
 #hover(download_icon_2)
 if not advanced_options.exists():
  print("No advanced options button.")
  stop()
 click(advanced_options)
 hover(dw_helper_icon)
 time.sleep(1) # ???
 if open_media_locally.exists():
  print("Item already downloaded.")
  print("Will not download it twice.")
  click(dw_helper_icon)
  return
 if not quick_download.exists():
  print("Item has no quick download button.")
  print("Could not download item.")
  click(dw_helper_icon)
  return
 click(quick_download)
 print("Download item triggered.")

def process_one_item():
 print("Step of processing one list item started.")
 list_plays = find_all(already_downloaded_lets_play_icon)
 list_downloads = find_all(download_icon_2)
 if (len(list_plays) > 0) and can_process_items():
  print("Found at least one item to delete from list.")
  delete_an_item()
  print("Step of processing one list item ended.")
  if not dw_helper_icon.exists():
   print("Error: No dwhelper icon after deletion of an item.")
   stop()
  click(dw_helper_icon)
  return
 print("Did not found any item to delete.")
 if len(list_downloads) > 0:
  print("Found at least one item to download.")
  download_an_item()
  print("Step of processing one list item ended.")
  time.sleep(DELAY_AFTER_DOWNLOADING_ONE_ITEM)
  if not dw_helper_icon.exists():
   print("Error: No dwhelper icon after downloading an item.")
   stop()
  click(dw_helper_icon)
  return
 print("ERROR: There is nothing to do in this step.")
 print("Step of processing one list item ended.")


def processing_loop():
 print("Entered processing loop just now.")
 while(1):
  print("In IDLE state.")
  print("Wait until can process at least one item in the list.")
  if not dw_helper_icon.exists():
   print("No dwhelper icon found.")
   break
  click(dw_helper_icon)
  try:
   wait_until(lambda: can_process_items(),600,10)# throws exception.
  except:
   print("Could not find new item within timeout.")
   break
  print("Found at least one item that can be processed.")
  print("Left IDLE state just now.")
  time.sleep(DELAY_ON_LEAVE_IDLE)
  while (can_process_items()):
   process_one_item()
  if not dw_helper_icon.exists():
   print("No dwhelper icon found to close dwhelper menu")
  click(dw_helper_icon) # leave dwhelper menu
  print("No more items to process at the moment.")
  print("Go into IDLE state now.")
  time.sleep(DELAY_IN_IDLE)
 print("Exited the processing loop just now.")


def main():
 press(LWIN + "3"); # open firefox
 time.sleep(5)
 processing_loop()
 print("MAIN ERROR.")
 stop()
 press(LWIN + "3"); # open firefox
 time.sleep(20)
 while(1):
  print("top of infinite loop.")
  if not dw_helper_icon.exists():
      #press(ALT + F4)
      press(LWIN + "S");
      press('p'); #,"o","w", "e", "r"
      write("owershell");
      press(ENTER);
      #write("Beep(1400,2000); #I am done")
      #press(ENTER)
      return
  print("found dw_helper_icon.")
  wait_until(lambda: search_for_new_entry(),600,1.0)# wait 10 minutes if there is no entry in the table that is downloaded.
  # should be changed so some wait only if no entry is present.
  time.sleep(WAIT_AFTER_DOWNLOAD_STARTED)

'''
wait_until 10min until there is anything to do

'''
main()
'''
enhancement:
* check that dwhelper icon with a blue or reds flag is also recognized and clicked.
* close the successfully downloaded message toast right lower corner.
*! check that last item will not be deleted after downloaded because then a new (the same item appers again as not yet downloaded.)
* check also for regcognize the -> arrow of already downloaded items in the list. and exclude scrolling if list might be empty. (because then web page scrollbar will be used.)
*! if a new item appears in the list, it has for some seconds the name of the previous entry. if you download in this time junk, it will be downloaded with wrong name.
        -> solution: only do something if there are at least two items, first care about deleting items already downloaded.
        if been in idle state (i.e. see list with exactly one element), and recognized a new element, insert a additional delay.
*
'''
